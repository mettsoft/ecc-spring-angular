<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        ">

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basename" value="messages" />
	</bean>

	<bean id="localeResolver" class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
		<property name="cookieName" value="localeCookie" />
		<property name="cookieMaxAge" value="3600" />
	</bean>
	
	<mvc:interceptors>		
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor">
			<property name="paramName" value="language" />
		</bean>
	</mvc:interceptors>

	<bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/spring_xml" />
		<property name="username" value="exist" />
		<property name="password" value="ex1stgl0bal" />				
	</bean>	

	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:persistence/hibernate.cfg.xml" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<bean id="roleDao" class="com.ecc.spring_xml.dao.RoleDao">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="personDao" class="com.ecc.spring_xml.dao.PersonDao">
		<constructor-arg ref="sessionFactory" />
	</bean>

	<bean id="personAssembler" class="com.ecc.spring_xml.assembler.PersonAssembler" />
	<bean id="roleAssembler" class="com.ecc.spring_xml.assembler.RoleAssembler" />
	<bean id="validator" class="com.ecc.spring_xml.util.validator.ModelValidator" />
	
	<bean id="personService" class="com.ecc.spring_xml.service.PersonService">
		<constructor-arg ref="personDao" />
		<constructor-arg ref="personAssembler" />
		<constructor-arg ref="roleDao" />
		<constructor-arg ref="roleAssembler" />
		<constructor-arg ref="validator" />
	</bean>

	<bean id="roleService" class="com.ecc.spring_xml.service.RoleService">
		<constructor-arg ref="roleDao" />
		<constructor-arg ref="roleAssembler" />
		<constructor-arg ref="validator" />
	</bean>

	<bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping" />
	
	<bean name="/role" class="com.ecc.spring_xml.web.RoleController">
		<property name="roleService" ref="roleService" />
		<property name="messageSource" ref="messageSource" />
	</bean>

	<bean name="/person" class="com.ecc.spring_xml.web.PersonController">
		<property name="personService" ref="personService" />
		<property name="roleService" ref="roleService" />
		<property name="messageSource" ref="messageSource" />
	</bean>

	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="get" read-only="true" />
			<tx:method name="list" read-only="true" />
			<tx:method name="*" />
		</tx:attributes>
	</tx:advice>

	<aop:config>
		<aop:pointcut id="daoOperation" expression="execution(* com.ecc.spring_xml.dao.*.*(..))" />
		<aop:advisor pointcut-ref="daoOperation" advice-ref="txAdvice" />
	</aop:config>

	<aop:aspectj-autoproxy proxy-target-class="true"/>
</beans>